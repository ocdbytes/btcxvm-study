// Module imports for all the opcodes
pub mod opcodes;
// Module for input processor
pub mod processor;
// Module for execution of the code on the vm
pub mod errors;
pub mod stack;
pub mod utils;

use std::env;

use processor::input::parse_input;

use stack::executor::execute_code;

use colored::Colorize;
use secp256k1::Secp256k1;

#[cfg(test)]
pub mod tests;

const BANNER: &str = "
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠀⠀⠀⠈⣇⠀⢰⡇⠀⣸⠃⠀⠀⠀⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣄⠀⠀⠀⢸⣷⣿⣿⣾⡏⠀⠀⠀⢠⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⡄⠈⠓⠦⣄⡈⠑⠒⠒⠚⢁⣠⠤⠚⠁⡰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⢸⣦⠀⠀⣠⣿⣿⣿⣿⣿⣿⣅⠀⠀⣴⠇⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀
⢀⣤⠶⠚⠛⠉⠉⠉⠉⢉⠉⠛⠛⠶⣦⣄⡀⠀⠀⣿⡇⢸⠁⢸⣄⣀⣠⣀⡇⠈⡇⢸⣿⠀⠀⢀⣠⣴⠶⠛⠛⠉⠉⠉⠉⠉⠉⠙⠓⢶⣤⠀
⣾⠃⠀⠀⠀⠀⠀⢐⣂⣤⣌⡀⠠⣀⠀⠐⢌⠓⢤⣿⡅⠀⣷⠋⢉⢉⡉⡙⠙⣶⠁⢨⣿⡴⠚⡡⠊⠁⣀⠄⢂⣡⣤⣒⡂⠀⠀⠀⠀⠀⠹⣧
⢻⡀⠀⠀⠀⠀⠀⠤⠤⠄⢀⣀⣈⡉⠉⠁⠀⠛⠢⠌⡛⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⢟⠁⠔⠛⠁⠈⠉⠉⣉⣀⡀⠀⠤⠤⠀⠀⠀⠀⠀⣰⠏
⠈⠳⣄⠀⠀⠭⠥⠤⠀⠀⢀⣀⣉⣉⠉⢀⡄⠀⠬⡅⠲⢿⣿⠃⠃⡏⠙⠸⠈⢿⡿⠖⠨⠥⠤⠤⡀⠉⢉⣉⣁⠀⠐⠂⠠⠤⠭⠀⠀⣴⠋⠀
⠀⠀⠈⠳⣄⠀⠀⠀⠀⠠⠀⠀⠀⠀⠄⠈⣀⡤⠥⠒⢒⣺⣧⡀⠀⠀⠀⠀⢀⣼⣟⡒⠒⠊⠤⣄⡀⠠⠀⠀⠀⠀⠄⠀⠀⠀⠀⣠⠞⠁⠀⠀
⠀⠀⠀⠀⠈⠓⠦⣄⣀⣀⣀⣠⣤⡴⠚⠛⠁⢀⣤⣶⣿⠋⠉⠙⠓⠒⠒⠚⠉⠁⠙⣿⣶⣤⡀⠈⠉⠓⢶⡤⢄⣀⣀⣀⣤⡴⠛⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⢧⡀⠀⠀⠀⠀⠀⣠⣴⣿⣿⣿⣿⣦⣤⣤⣀⣀⣀⣀⣤⣤⣶⣿⣿⣿⣿⣶⣄⠀⠀⠁⠀⠀⢀⡼⠋⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠳⠶⠖⠒⣻⣿⢻⡿⠟⣿⣿⣿  BEE VM ⣿⣿⣿⡿⠻⣿⠻⣿⡗⠲⠶⠶⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠟⠁⣾⣧⠀⣿⠛⠻⠿⠿⠿⠿⠿⠿⠿⠿⠟⠛⡇⢀⣿⣇⠈⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠁⠀⠰⣿⣿⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⢸⣿⣿⠀⠀⠈⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡿⠀⢸⣷⣤⣤⣤⣀⣀⣀⣠⣤⣤⣤⣾⠀⠈⣿⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠃⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⢹⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠏⠀⠀⠀⠸⡏⠉⠙⠛⠛⠛⠛⠉⠉⡽⠀⠀⠀⠀⠻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠟⠁⠀⠀⠀⠀⠀⠻⣦⣤⣤⣤⣤⣤⣤⡼⠁⠀⠀⠀⠀⠀⠈⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⢿⣿⣿⠿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
";

fn main() -> color_eyre::Result<()> {
    env_logger::init();
    log::info!("{}", BANNER.yellow());
    log::info!("BTC VM");

    let args: Vec<String> = env::args().collect();

    let res = parse_input(args[1].clone())?;
    let secp = Secp256k1::new();

    execute_code(res.clone(), secp).expect("Error in executing the instructions");

    Ok(())
}
